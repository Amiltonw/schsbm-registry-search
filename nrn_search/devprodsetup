# tactiq.io free youtube transcript
# No title found
# https://www.youtube.com/watch/QjEVmQ4rcWA

00:00:00.000 hi everyone welcome to a new tutorial
00:00:02.520 series on the CVI Channel
00:00:04.860 in this series we'll be focusing on the
00:00:07.379 deployment of a Django application on
00:00:09.540 Microsoft Azure you can see the app that
00:00:12.240 we are going to deploy on your screen
00:00:14.280 now is a very basic application with the
00:00:17.640 home page and also an about page
00:00:20.420 and on our home page you will see a
00:00:23.340 number of records that have been added
00:00:25.019 to the database we also have the option
00:00:27.060 to add records and to delete records and
00:00:30.779 that is what we will be deploying to
00:00:33.000 Microsoft azure
00:00:34.860 so how will this deployment practically
00:00:36.899 work well we start off in our local
00:00:39.899 computer where our project is stored in
00:00:42.239 a folder we are going to bring that to a
00:00:45.660 GitHub repository using git and this is
00:00:48.239 kind of the online storage point for our
00:00:50.340 code
00:00:51.300 and when we make changes on our local
00:00:53.399 computer we'll be able to push those
00:00:55.860 changes again to our GitHub repository
00:00:58.440 so if we make changes locally we can
00:01:00.719 bring those online very easily
00:01:04.500 um then from GitHub onwards we're able
00:01:07.439 to connect our code to Azure
00:01:10.439 um on Azure we will set up a few
00:01:11.939 resources and I will explain those in a
00:01:14.040 later video and there we can simply say
00:01:17.159 that it needs to use the code in our
00:01:19.439 GitHub repository this tutorial Series
00:01:21.479 has been split up into four different
00:01:23.460 parts you are now watching the first one
00:01:25.619 where we're going to make some changes
00:01:27.060 to our Django codes for deployment
00:01:30.060 um in the next video we will push our
00:01:32.040 code to GitHub using git
00:01:34.799 video after that we'll be focusing on
00:01:37.079 creating all of the Microsoft Azure
00:01:39.060 resources and in the last video we will
00:01:42.299 deploy our code to Azure and see where
00:01:45.000 everything works the way that we expect
00:01:47.640 but in this video we are making changes
00:01:49.920 to our Django app for the deployment and
00:01:53.820 to realize this we're going to do five
00:01:55.680 things we start by installing additional
00:01:58.380 packages for deployment next we will be
00:02:01.619 creating a settings file specifically
00:02:03.720 for deployment because some things are
00:02:05.759 going to change such as our database for
00:02:08.220 example
00:02:09.060 the third item is telling our app when
00:02:11.819 to use our deployment settings and when
00:02:13.620 to just use our local settings so we can
00:02:16.080 use the app in both our local computer
00:02:18.300 but also on the Azure portal
00:02:21.540 um we will also add a requirements.dxt
00:02:23.819 file which will present a list of all of
00:02:26.520 our packages so as you will know which
00:02:28.379 packages we have used during the
00:02:30.239 development and as the last item on the
00:02:32.879 list we are going to add a config and
00:02:34.800 git ignore file the config file will set
00:02:37.560 some variables on the Azure portal and
00:02:40.440 they get ignore file will say which
00:02:42.720 parts of our code need to be going to
00:02:44.519 GitHub and which parts do not so let's
00:02:47.940 get started the first thing that we need
00:02:49.680 to do is installing some additional
00:02:51.660 packages so I've already opened the web
00:02:55.140 page where we can find them the first
00:02:57.000 one is psychop G2 and this will enable
00:03:00.900 us to communicate through the postgresql
00:03:03.180 database that we will be using in our
00:03:05.519 deployment so this is the first package
00:03:07.500 we need to add to our app
00:03:09.300 so I'm just going to copy it go to my
00:03:11.879 code and say clip install cycle G2 and
00:03:16.379 that is going to take some time to do
00:03:19.620 that and meanwhile we can go to the
00:03:22.800 second package we need in the second
00:03:24.420 package is
00:03:25.700 python.env and this enables us to use
00:03:28.860 environment variables actually read
00:03:30.840 those
00:03:32.159 um So within our Azure environment we
00:03:34.140 will set a few
00:03:35.580 a variable such as a secret key such as
00:03:38.099 some database credentials and we need
00:03:40.019 this package to be able to get those
00:03:41.519 from Azure and actually use those in our
00:03:43.680 code so again I'm going to copy it to
00:03:47.099 the clipboard feel free to just
00:03:50.280 type it in yourself and spit install
00:03:52.440 python hyphen.env
00:03:56.280 and the last package that we will need
00:03:58.200 is white noise and white noise takes
00:04:01.140 care of your static files so it enables
00:04:03.239 us to use our CSS files but also images
00:04:08.280 and all the different kind of things
00:04:10.379 for our app when it is in deployments so
00:04:13.439 we are going to copy it install white
00:04:15.659 noise and we are going to paste it
00:04:18.060 inside of our code
00:04:21.238 there we go and now all of the packages
00:04:24.120 that we need have been installed
00:04:27.000 the next item on our to-do list is
00:04:29.040 adding a new settings file for our
00:04:31.500 deployment settings so right now we have
00:04:33.960 the settings the by file which you also
00:04:36.060 will have inside of your project but it
00:04:37.740 has all of the settings that I'm going
00:04:39.000 to use for my development on my local
00:04:42.120 computer but some things are going to
00:04:44.100 change when I move to Azure so for
00:04:45.780 example we will use a new database we do
00:04:48.840 not want debug to be settled through
00:04:50.759 because then everyone can see all of our
00:04:53.880 settings when something goes wrong there
00:04:56.520 are some other things that we just want
00:04:57.840 to change because it's different hosting
00:04:59.940 your app on your local computer than it
00:05:01.800 hosting it online
00:05:04.199 um however we do not want to override
00:05:05.880 all of these settings we just want to
00:05:07.979 identify the settings that will be new
00:05:11.580 um or different in the online version
00:05:14.699 then it will be on the local version and
00:05:16.440 that is exactly what we are going to do
00:05:17.880 by adding a new file in your same
00:05:21.540 directory as your settings and file and
00:05:23.820 we're going to call it deployment that's
00:05:26.580 high and in this file we are going to
00:05:29.220 list down everything that is going to be
00:05:30.840 different opposed to settings on our
00:05:33.120 local computer so let's add some code to
00:05:35.100 our deployment at Pi file we're going to
00:05:37.020 start off with a few Imports which we
00:05:38.880 will need so first things first we're
00:05:42.240 going to import OS which will allow us
00:05:44.160 to communicate with environment
00:05:45.479 variables next from that settings we are
00:05:49.740 going to import everything the star
00:05:52.440 means basically everything from the our
00:05:54.600 local dot settings file that we use now
00:05:56.460 and separately we're also going to
00:05:58.620 import base there from our settings file
00:06:02.460 and for some reason uh yeah that we need
00:06:04.620 to do this separately base there refers
00:06:06.660 to our base directory to evolve to our
00:06:08.639 to our base directories
00:06:11.820 um so let's list down the variables
00:06:13.620 which are going to be different for
00:06:15.060 deployment than when we are going to use
00:06:16.979 this code on our local computer and the
00:06:19.979 first one that we need to fill in here
00:06:21.840 is the allowed hosts now the allowed
00:06:24.960 host tells us a little bit more about
00:06:27.419 which URLs or domains uh can be served
00:06:31.740 by this code so it actually tells which
00:06:33.840 URLs domains can use this code and we're
00:06:37.139 going to set that to an environment
00:06:39.000 variable so we're going to type in OS
00:06:41.280 Dot and fire and then we're going to set
00:06:44.759 this to website
00:06:48.720 hostname
00:06:51.180 and the reason we're setting it to
00:06:52.860 website host name is when we deploy this
00:06:54.660 application to Azure Azure will
00:06:56.580 automatically create this hidden
00:06:58.259 environment variable which specifies our
00:07:00.240 URL and by including that here we
00:07:02.940 basically specify that only the URL that
00:07:05.880 Azure has created can be used to serve
00:07:08.280 these codes no other domain can use this
00:07:10.500 code
00:07:12.419 the next thing that we are going to set
00:07:14.759 is the csrf trusted Origins
00:07:21.000 and this is going to be very similar
00:07:25.800 we're going to set that to
00:07:29.819 https
00:07:32.400 and then again we're going to add OS dot
00:07:37.560 environment and the website hosting so
00:07:39.660 this will just give us the full address
00:07:41.759 and the series of exclusive origin
00:07:43.620 specifies uh The Trusted URLs or domains
00:07:47.039 from which requests can come into our
00:07:49.139 application
00:07:51.240 next we're going to set debug and debug
00:07:55.380 we're going to set up to false because
00:07:57.000 always when you deploy an application
00:07:59.039 you want to set that to false now when
00:08:03.180 debug is true when your user makes an
00:08:05.699 error or a mistake in the application it
00:08:08.160 will display what is going wrong it will
00:08:10.199 also show you a whole lot of uh things
00:08:13.080 of your code which you might not want to
00:08:15.539 be out there on the internet so it could
00:08:17.880 be database credentials or some other
00:08:19.620 important information that that's just
00:08:21.300 for the developers not for the people
00:08:23.340 using the tool if you set this to false
00:08:26.400 it will show a very generic 404 page and
00:08:28.979 it will not provide any information uh
00:08:31.379 yeah on the actual code and we can
00:08:34.320 illustrate this by going to our
00:08:35.458 application
00:08:36.899 if I were to go to a path from which I
00:08:39.719 know that it will not exist I will get
00:08:41.880 this page not found 404 which it
00:08:44.339 specifies all of the different files I
00:08:45.959 have inside of my application and on the
00:08:48.000 bottom you can already see that we're
00:08:49.500 seeing this because we have debug it's
00:08:51.240 true in our local settings if we change
00:08:53.640 that to false it will display a standard
00:08:55.920 404 page and no additional information
00:08:58.380 will be displayed there so that is much
00:09:01.620 safer the next thing in our code which
00:09:03.600 is going to be different than our local
00:09:05.100 settings is the middleware
00:09:08.339 um and to input this inside of our
00:09:11.820 settings file we're just going to copy
00:09:13.500 it over and make a small change so from
00:09:16.320 your settings file copy over the the
00:09:18.240 middleware uh brackets and when we go to
00:09:21.360 deployment we're just going to paste it
00:09:23.279 and make one small change and that is
00:09:26.459 going to be the addition of white noise
00:09:28.320 because white noise is going to handle
00:09:30.300 some of our static files so on the
00:09:33.480 second line we're going to specify
00:09:35.760 right noise Dot
00:09:38.100 middleware
00:09:39.720 that
00:09:41.160 white noise
00:09:44.760 middleware
00:09:47.519 now it's quite important that you take
00:09:49.080 into account capitals here because this
00:09:50.940 is the way that your opponent can go
00:09:52.440 wrong again so let's check it one more
00:09:54.000 time White Noise dot middleware that
00:09:56.700 white noise middleware with the capital
00:09:59.040 letters there
00:10:00.779 another thing that we need to state is
00:10:03.560 our static files storage this is going
00:10:06.959 to be very similar again it's also going
00:10:09.060 to be from White Noise because White
00:10:11.160 Noise will take care of that real and
00:10:14.399 specify white noise that
00:10:16.920 storage that
00:10:19.519 compressed with the capital manifest
00:10:22.560 with the capital
00:10:24.540 and then aesthetic with a capital
00:10:27.420 and then files together and Storage
00:10:33.420 all right
00:10:34.920 and we also need to state where we are
00:10:37.019 going to store those files and it's
00:10:38.940 going to be in the static route
00:10:43.140 and then we're going to set that to
00:10:46.519 os.pot dot join
00:10:49.500 and we will state that we want to follow
00:10:52.740 our base directory
00:10:55.500 and then sort it all in a folder called
00:10:58.680 Static files
00:11:00.839 so now this is a folder it's going to be
00:11:02.579 created and that's where we can put our
00:11:04.200 static files the last thing we need to
00:11:06.300 specify are our database credentials
00:11:08.220 this is really important because we're
00:11:10.019 going to use postgresql instead of the
00:11:13.200 database we use now which is sqlite
00:11:16.079 so we start by say declaring databases
00:11:20.339 it's going to be equal and we open some
00:11:22.560 parenthesis then we say
00:11:26.040 default
00:11:30.120 and similarly to we just did
00:11:32.700 we again open Berlin City
00:11:35.459 we need to specify a number of variables
00:11:37.740 first of all we need to specify the
00:11:40.200 engine that we're going to use and you
00:11:42.600 can see in our settings apply file on
00:11:44.640 your databases that before it was
00:11:47.000 django.db the sqlite free but right now
00:11:50.700 we're going to switch that we're going
00:11:52.200 to use
00:11:56.660 django.vb dot backends dot
00:12:02.360 post
00:12:04.160 rescue well
00:12:07.440 there we go and for this database we
00:12:10.380 need to specify a number of credentials
00:12:12.180 so we can actually make the connections
00:12:13.680 when we send requests so it requires a
00:12:16.500 name of my database
00:12:22.440 it requires a host for database
00:12:30.060 it's going to put these two empty values
00:12:32.160 for now we are going to need a user
00:12:36.180 close to one
00:12:41.640 and lastly we will also need to provide
00:12:43.740 a password
00:12:48.139 foreign
00:12:49.940 is going to provide us with all of these
00:12:53.040 credentials when we create these
00:12:54.480 database and uh as a matter of fact they
00:12:57.000 go even further they are going to create
00:12:58.560 an environment variable that will store
00:13:01.560 all of these credentials so we can refer
00:13:05.339 to that environment variable instead of
00:13:06.899 hard coding the name the host the user
00:13:09.300 the password since of course it's not
00:13:11.100 safe however the way that they provide
00:13:13.320 these credentials is a little bit
00:13:14.940 different than what you're used to they
00:13:16.800 provide an environment variable called
00:13:18.540 Azure postgresql connection stream and
00:13:21.600 this connection string is one complete
00:13:24.420 string which specifies the server the
00:13:27.360 name the also the port also the the
00:13:31.019 password and the user ID now since it is
00:13:34.740 all into one string we need to split
00:13:36.839 this string to use these
00:13:39.320 variables inside of our code and that's
00:13:42.959 exactly what we're going to do now
00:13:45.240 so
00:13:46.620 the connection string
00:13:50.459 is equal to OS dot environment because
00:13:53.700 we're going to get an environment
00:13:54.899 variable and as we just saw it's going
00:13:58.079 to be azure
00:14:00.260 close press ql
00:14:05.160 and then it's going to be
00:14:07.500 connection string
00:14:10.079 now we need to actually uh get those
00:14:13.440 parameters
00:14:20.940 false splitting these strings into some
00:14:24.959 bars so let's
00:14:27.959 create a code to split it and we're
00:14:29.820 going to do uh
00:14:32.279 split
00:14:36.480 equal to an equal sign
00:14:40.380 um next we're going to say
00:14:43.820 uh that's okay it's going to be actually
00:14:45.959 the same code so let's just copy the one
00:14:47.880 before so we're going to do again power
00:14:49.740 dot split
00:14:51.899 based on an equal sign within the first
00:14:55.620 one
00:15:00.480 so uh
00:15:02.339 in
00:15:03.959 connection string
00:15:06.480 but split
00:15:10.920 like this this should be your end result
00:15:13.560 so our connection stream variable gets
00:15:15.839 the Azure postgresql connection stream
00:15:17.760 with all of the connections we need and
00:15:19.920 this parameters variable uh splits that
00:15:22.680 string up into different chunks so we
00:15:25.139 can actually use it inside of our name
00:15:27.000 host user and password and that is what
00:15:29.820 we're going to do right now so inside of
00:15:32.220 the name we're just going to specify
00:15:35.100 parameters and then equal to
00:15:38.120 PB name
00:15:41.339 and we're going to do the same for a
00:15:43.500 host we're going to call it host
00:15:48.720 same for the user called user
00:15:54.360 and the same for password
00:16:01.160 and this is our database done and these
00:16:05.519 are actually all of the things that we
00:16:06.660 need to specify inside of our deployment
00:16:09.300 python the next step is to tell our
00:16:11.940 Django application when to use our
00:16:13.740 settings the by file and when to use our
00:16:16.139 deployment data python
00:16:18.540 um and to do that we're going to change
00:16:20.040 two files first of all the
00:16:23.420 wsgi.bifer and second of all the
00:16:26.399 manage.bi file and why do we are we
00:16:29.279 going to change these two ones well if
00:16:31.380 you take a look inside of this uh python
00:16:34.139 file you can see that it sets the
00:16:38.100 default settings to Azure projected
00:16:40.320 settings and this will also take it to
00:16:42.480 our cloud service meaning that it will
00:16:44.160 take Azure project settings and we are
00:16:46.259 going to slightly modify this code so in
00:16:50.160 this file I'm going to say the settings
00:16:52.740 module then go into state that I want to
00:16:57.120 use my azure
00:17:00.600 project
00:17:02.820 dot deployment
00:17:05.640 file
00:17:07.679 if
00:17:08.880 the website hostname
00:17:18.720 yes correct if the website does hostname
00:17:21.839 is present inside OS plus environment
00:17:26.459 else I would like to use my Azure
00:17:30.240 project dot settings file so what we do
00:17:34.919 here is very basic we refer to the Azure
00:17:37.380 project folder which is my folder here
00:17:39.000 and we State we want to use the
00:17:40.919 deployment file if the website the
00:17:43.320 hostname is there
00:17:45.120 and I already explained that earlier
00:17:46.740 that the website of hostname is a
00:17:48.120 variable that I hear sets by default so
00:17:50.220 by evaluating whether this is here we
00:17:52.020 can determine whether we are in
00:17:53.820 deployment or whether we are from our
00:17:55.620 local computer
00:17:58.020 um and then it is actually very easy
00:17:59.580 because we can say that this uh piece of
00:18:03.900 code here should be equal to not Azure
00:18:07.080 project dot settings but to our settings
00:18:10.620 module
00:18:12.780 and this will create a clear distinction
00:18:14.880 between when to use which file next step
00:18:18.660 is to create a requirements.txt file and
00:18:22.559 this file is going to tell Azure during
00:18:24.600 the deployment which packages we have
00:18:26.460 used to build our application next step
00:18:28.919 is the requirements that the XT file we
00:18:31.679 are going to create that and it will
00:18:33.179 consist of a list of all of the packages
00:18:34.919 that we've used during development Azure
00:18:37.559 needs to know this because Azure needs
00:18:39.179 to install all of these packages to make
00:18:40.860 sure that the code will work as well as
00:18:43.200 it does on your local computer as it
00:18:45.120 will do the board online so how do you
00:18:48.059 generate this well it's really simple uh
00:18:50.520 you actually just need to state
00:18:52.980 yep
00:18:54.539 freeze then click this and we're going
00:18:58.140 to freeze it into requirements.txt
00:19:02.820 and you can see immediately a file pops
00:19:06.360 up right here and you will see that it
00:19:08.760 has all of the packages including the
00:19:10.200 version that we've used now you can also
00:19:12.660 see here the packages that we have added
00:19:15.539 at the beginning of this tutorial
00:19:18.600 we're also going to add a config file
00:19:21.780 um so in the lowest level of our
00:19:23.220 application I'm going to add a new file
00:19:25.799 and I'm going to call that dot
00:19:28.140 production
00:19:31.020 because that's the name that Azure will
00:19:33.179 recognize and on top of this file I'm
00:19:35.760 going to specify that this is a config
00:19:38.520 file
00:19:39.660 and inside of here we're going to
00:19:41.520 specify one variable that will be set
00:19:44.940 into the environment variables of azure
00:19:47.039 when we deploy this and that variable is
00:19:49.919 SCM
00:19:51.900 do
00:19:53.640 build
00:19:55.020 during deployments
00:19:59.460 we'll just set that to true
00:20:04.620 and then save it just make sure that
00:20:07.320 when we deploy this it immediately
00:20:09.600 builds the application this is critical
00:20:11.520 because otherwise it will not work but
00:20:14.520 this is all you need to do Azure will
00:20:16.260 recognize that this is there and start
00:20:18.120 building your app when will you
00:20:19.559 deployment the last video we're going to
00:20:22.020 add another last episode tutorial is a
00:20:25.320 git ignore file so we're gonna again on
00:20:28.440 the lowest level of our application
00:20:29.940 click on new file and create a file
00:20:33.240 called Dot get ignore
00:20:37.860 and what this file will do is when we
00:20:40.380 are going to use git to publish this
00:20:42.720 code onto GitHub it is going to ignore
00:20:44.880 the files that I'm going to list down
00:20:46.620 here now this list is quite big and I've
00:20:49.740 actually found this another GitHub
00:20:51.419 repository of Microsoft so I'm just
00:20:53.760 going to paste all of the values here
00:20:57.059 um I would recommend that you go to my
00:20:58.980 GitHub repository and look for the git
00:21:01.380 ignore file there and just copy and
00:21:03.059 paste it so you make sure that
00:21:04.260 everything is there so one of the
00:21:06.000 typical things that you don't want to
00:21:07.679 take into your GitHub is like the buy
00:21:09.600 cache but also
00:21:12.419 for example your
00:21:15.020 database files all of these kind of
00:21:17.400 things that they don't need to be added
00:21:20.640 to your GitHub repository so therefore
00:21:23.100 we exclude them by using this get ignore
00:21:26.160 file so that was it for this uh first
00:21:29.760 video inside of this tutorial series
00:21:31.620 we've successfully changed our Django
00:21:33.960 code for deployment and that means that
00:21:36.000 in the next videos we can start and
00:21:38.460 doing the rest of the steps we need to
00:21:39.960 do in the next video we will push our
00:21:42.539 code to GitHub with Git so that our code
00:21:45.600 will link online and videos after that
00:21:47.940 we will create the Microsoft Azure
00:21:49.679 resources and deploy our general code to
00:21:52.020 Microsoft Azure thank you very much for
00:21:54.720 watching this video and I hope to see
00:21:56.460 you in the next one
# tactiq.io free youtube transcript
# No title found
# https://www.youtube.com/watch/X2eUFKrY00Y

00:00:00.000 hi everyone and welcome to a new video
00:00:01.920 on the CVI channel in this tutorial
00:00:04.380 series we are deploying a Django
00:00:06.180 application on Microsoft azure this is
00:00:09.540 the second video of this tutorial in the
00:00:12.000 last video we changed our Django code so
00:00:14.580 it's ready for performance and in this
00:00:16.859 video we're going to push our code to
00:00:19.140 GitHub with Git there are two
00:00:22.020 prerequisites for this video please make
00:00:24.600 sure that you have git installed on your
00:00:26.699 computer which you can do very easily by
00:00:29.099 going to their websites I will leave the
00:00:30.779 link in the description and also make
00:00:32.700 sure that you have an account on GitHub
00:00:35.040 now both these things completely free
00:00:37.680 and easy to do
00:00:39.719 um so yeah let's get started with this
00:00:42.180 video
00:00:42.899 so in today's video we're going to focus
00:00:44.700 on four key tasks we're going to start
00:00:47.579 off by configuring git inside of our
00:00:49.739 project so we can actually use git next
00:00:52.800 we are going to save our code in a git
00:00:54.899 repository which will be a repository on
00:00:57.000 our local computer
00:00:59.520 um then we are going to create a GitHub
00:01:01.199 repository which enables us to store our
00:01:04.559 code online and then we're going to push
00:01:06.720 our code from our local computer with
00:01:09.060 this to GitHub and that will complete
00:01:12.060 all of the tasks for today and make sure
00:01:13.860 that our code is available both offline
00:01:16.680 and online and I will also show you how
00:01:19.500 you can do that process after you've
00:01:21.420 done it for the first time so let's get
00:01:22.979 started so let's start by initializing
00:01:25.439 git inside of our project
00:01:27.540 um yeah for the sake of Simplicity I've
00:01:29.220 added all of the commands that we need
00:01:30.720 to enter in a simple notes file inside
00:01:33.180 of our project I'm going to delete that
00:01:34.920 after so don't worry about that the
00:01:37.200 first thing we need to do is configure
00:01:39.659 our username so I'm going to enter in my
00:01:43.380 terminal get config
00:01:46.619 global
00:01:48.180 user dot name and then here it's going
00:01:50.939 to be my name
00:01:53.159 all right next up I'm going to configure
00:01:56.700 my email address so I'm going to do
00:02:00.360 Global user.email and it's going to be
00:02:02.820 equal to my email address
00:02:08.399 where we go
00:02:10.380 the next two I'm just going to uh put
00:02:13.319 them in there as well is git from big
00:02:16.920 Global push Dot default
00:02:22.260 matching
00:02:25.500 and get config
00:02:30.060 global alias.com
00:02:34.860 checkout
00:02:36.360 and now with the last command we can
00:02:38.340 initialize it by stating if in it
00:02:43.379 and the first thing you will immediately
00:02:44.879 notice is that all of my files here are
00:02:47.940 becoming green and the reason that they
00:02:49.739 are becoming green is because these
00:02:51.900 files are new and have not been pushed
00:02:55.140 into our git repository so every time
00:02:58.739 something is new it will show a green
00:03:01.019 with you and every time that a file has
00:03:04.019 been modified but it is already in your
00:03:05.519 repository it will show up as orange
00:03:09.120 with the m or from modified
00:03:11.580 and when you go to the folder of your
00:03:13.800 project to your computer you will notice
00:03:15.360 another thing you will see that there is
00:03:17.340 a new hidden folder called dot get and
00:03:20.700 this is actually the repository that
00:03:22.260 we've just created and where Michael
00:03:23.940 will be stored on my local computer
00:03:25.620 before we bring it to GitHub so our next
00:03:28.920 step is adding all of our files into our
00:03:31.500 git repository because right now they're
00:03:33.840 not currently in there so I'm going to
00:03:36.900 start by just deleting my notes folder
00:03:38.760 because I'm not going to need that one
00:03:41.599 I can add all of my
00:03:44.879 um files into that git repository by
00:03:47.640 stating if add and then a DOT which
00:03:51.599 means that we're going to add everything
00:03:55.140 okay the next thing that we need to say
00:03:57.840 is git commit Dash am and then we need
00:04:02.040 to provide a message and this describes
00:04:04.799 why you've made a change to your code
00:04:07.019 so
00:04:08.519 um I'm just going to say this is my
00:04:10.200 first commit and this is also the
00:04:12.360 description that will show up in GitHub
00:04:13.799 eventually so you can kind of see why
00:04:16.260 different changes have been made to your
00:04:17.699 code
00:04:19.139 okay and you can see now that there's a
00:04:21.180 long list of files that have been added
00:04:23.880 to my get repository and you will also
00:04:25.979 notice that the files here are no longer
00:04:28.620 green because they have been added so
00:04:30.479 they're no longer and track changes
00:04:32.100 they're just all tracked you will see
00:04:34.800 that I made a small change to my form of
00:04:36.540 Supply file I did nothing else but add
00:04:38.220 some spaces and when I save it you will
00:04:40.740 see that it turns up as kind of an
00:04:42.600 orange color and it will state that it
00:04:44.520 has been modified well how do we then
00:04:46.860 process that change again to my local
00:04:48.660 video cluster first of all we do the
00:04:50.820 same skip ad
00:04:53.840 it commit am and I can say change to my
00:04:58.440 form
00:05:03.479 and there you can see there is one file
00:05:05.520 has changed and it will no longer show
00:05:07.320 up as orange it is now time to create a
00:05:10.020 repository where we will store our local
00:05:12.360 code
00:05:13.979 um so when you go to GitHub you need to
00:05:16.560 log in you can go to repositories now
00:05:19.979 you will see a list of all of your
00:05:21.300 existing repositories if you have any
00:05:24.240 um and what we're going to do is create
00:05:25.500 a new one
00:05:27.180 and in this window it will ask for a
00:05:29.820 repository name so I'm going to say
00:05:31.440 Django with Floyd on Azure and I'm just
00:05:35.520 going to State this is for a tutorial
00:05:39.300 where I
00:05:41.160 deploy a Django
00:05:43.820 Azure I'm going to leave it as public if
00:05:47.520 your code has particular things in there
00:05:50.400 that you don't want others to see I
00:05:51.720 recommend you set it on private same if
00:05:54.180 you're actually going to deploy these
00:05:55.800 apps to keep them
00:05:58.020 um
00:05:58.620 in production I would really recommend
00:06:00.720 just doing it privately but for this
00:06:02.580 sake I'm going to go for public
00:06:05.460 um yeah you can add a readme file if you
00:06:07.199 want to add more information about your
00:06:08.759 project but all of these things are not
00:06:10.560 really required for us now so I'm going
00:06:12.720 to click on create Repository
00:06:16.380 I'm gonna give it some time and here you
00:06:19.560 will see
00:06:21.000 um the way that GitHub recommends that
00:06:23.280 we actually publish our code so we can
00:06:27.000 create a new repository on the command
00:06:29.220 line or we can push an existing
00:06:31.319 repository from the command line now we
00:06:33.780 already have
00:06:35.460 moved our code to git so it's already in
00:06:38.039 there so we can simply copy the code
00:06:41.460 from the last code block
00:06:43.319 go to our code terminal right here and
00:06:47.220 just paste it in
00:06:52.680 and this should do the job for us
00:06:55.620 so you can see that it's going in there
00:06:59.280 and right now it should be done so it's
00:07:03.060 as simple as that when we now go back
00:07:05.280 and I refresh this page you will see
00:07:07.500 that your code is on GitHub you can also
00:07:10.020 see here in the messages that all of
00:07:11.699 these have first commit except for the
00:07:14.580 one where I changed my form so even if I
00:07:17.280 go deeper into there you will see that I
00:07:19.740 change my form of supply and that's the
00:07:21.240 reason that I see this message here
00:07:25.860 and what happens if you want to make any
00:07:28.259 more changes to your account well very
00:07:29.699 basic let's take the same example here
00:07:31.560 so I have a model set by file in Azure
00:07:33.479 content and I'm just gonna add a space
00:07:37.259 and save it again so my code is going to
00:07:39.660 think that it is modified
00:07:41.580 all I need to do now is the same as
00:07:43.500 before I do here
00:07:46.979 all right
00:07:48.599 oh I missed started I don't get that
00:07:52.860 then I say GIF commit am and I say
00:07:58.020 change models file
00:08:02.400 and then I'm going to get push
00:08:04.979 now it's going to push it up to GitHub
00:08:08.099 so we're going to give it a second it
00:08:10.080 says it has deployed it to my repository
00:08:13.319 and if I go to my repository and refresh
00:08:16.319 it you will immediately see the change
00:08:18.080 so let's go to yeah currency here change
00:08:21.419 the models file and if I open up Azure
00:08:23.280 content here you will see that here I
00:08:26.039 still change my form and here I change
00:08:27.599 my models file and that is the way that
00:08:29.639 you work with Git and GitHub and how you
00:08:31.440 can get your code up to an online
00:08:34.080 Repository so that was it for the second
00:08:36.839 video in this tutorial series uh we
00:08:39.240 configured git inside of our project we
00:08:41.458 stored our code in the git repository we
00:08:44.159 actually we created a GitHub repository
00:08:46.080 and we pushed our code to GitHub and
00:08:48.540 also showed you how you can make
00:08:50.760 additional changes so that is all we
00:08:53.160 need to do for today
00:08:55.380 um yeah that means that we now have
00:08:56.880 concluded the first two steps of
00:08:58.620 deploying our Django app to Azure we've
00:09:00.779 changed our Django code for deployment
00:09:02.640 with pushed our code to get up with Git
00:09:04.680 and that means that in the next video
00:09:06.839 we're going to create all of the
00:09:08.279 Microsoft Azure resource that we'll need
00:09:10.019 and in the last video we can deploy our
00:09:12.480 code to Microsoft Azure and that will be
00:09:15.000 the final one so thank you very much for
00:09:17.700 watching this video and I hope to see
00:09:19.560 you in the next one and for now enjoy
00:09:21.420 the rest of your day
00:09:23.040 foreign
# tactiq.io free youtube transcript
# No title found
# https://www.youtube.com/watch/_Gx30E3r1xk

00:00:00.000 hi everyone and welcome to a new video
00:00:02.280 on the CBI Channel this is the third
00:00:04.799 video in the tutorial Series where we
00:00:06.480 deploy a Django application on Microsoft
00:00:09.179 Azure in the first video we already
00:00:11.580 changed our Django code so it's ready
00:00:13.440 for deployment in our previous video we
00:00:16.079 pushed our go to GitHub with Git so that
00:00:18.359 we now have the code in an online
00:00:19.619 location and in this video we will
00:00:21.960 create Microsoft Azure resources so
00:00:24.240 everything is ready for deployments we
00:00:26.699 will then use the video after this to
00:00:28.859 actually deploy our Django code to Azure
00:00:30.960 and check whether everything works the
00:00:32.399 way that we expect in this video we are
00:00:35.219 going to focus on four main tasks we're
00:00:38.880 going to start by creating a resource
00:00:41.280 Group on Azure which will serve as kind
00:00:43.260 of a container for the services that we
00:00:45.120 need
00:00:45.840 next we're going to use Azure app
00:00:47.940 Services which will help us creating a
00:00:49.980 database but also a server so we have
00:00:52.140 everything we need to run our code on
00:00:54.719 then I will explain our resources and
00:00:57.719 what you can find where and lastly we
00:01:00.360 will be adding environment variables to
00:01:03.660 both our code but also to the Azure
00:01:05.339 portal so you can also see how that
00:01:07.439 works so one of the prerequisites for
00:01:09.840 this video is that you actually have
00:01:11.780 access to the Azure portal I will
00:01:14.520 include a link in the description below
00:01:16.260 where you can set up your own Microsoft
00:01:18.360 Azure account so you can follow along
00:01:20.759 with this tutorial
00:01:22.320 and setting up your Azure account is
00:01:24.420 completely free and also when you do so
00:01:27.119 you get quite some credit uh available
00:01:30.299 to you so you can actually follow along
00:01:32.040 with this tutorial and try some
00:01:33.600 different things without having to pay
00:01:34.920 for it so that's quite a nice way to
00:01:36.600 getting introduced to the edge products
00:01:38.220 so when you log into Azure which is
00:01:41.280 located on portal.assure.com this is the
00:01:44.220 home page where you will land this is
00:01:46.560 kind of a dashboard where you can deploy
00:01:48.299 new services but also view your most
00:01:50.640 recent or your favorite resources you've
00:01:52.560 created so far
00:01:54.060 so the first thing we need to do on the
00:01:56.460 Azure portal is create a resource Group
00:01:58.799 and a resource Group represents a
00:02:01.320 container for all of your services
00:02:03.420 so it's kind of the other way to divide
00:02:06.060 your services across projects has also
00:02:09.060 enables them to communicate with each
00:02:10.560 other
00:02:11.280 so I'm gonna click on resource groups
00:02:14.580 and you will see that I don't have any
00:02:17.160 yet I'm going to now select create
00:02:20.879 and this will open up a menu where I
00:02:23.940 first need to select my subscription uh
00:02:26.040 well I only have one so I'm going to go
00:02:27.959 for actual description one and then I
00:02:29.879 can give my Resource Group a name and
00:02:32.580 I'm going to name my result azure
00:02:35.760 foreign
00:02:44.540 s you to specify a region and for all
00:02:47.760 Azure resources goes that you want to
00:02:50.580 select a region closest to you because
00:02:53.940 then you your resources get stored on
00:02:56.700 the closest Data Center and it literally
00:02:58.800 means the less distance the files should
00:03:00.959 work so I select Western Europe for me
00:03:04.440 and now I'm going to go to review plus
00:03:07.319 create so it has done some validations
00:03:10.080 it had passed that and I can now click
00:03:12.599 on create
00:03:14.040 so it will take some time and now you
00:03:16.739 can see that our Resource Group has been
00:03:18.599 created and now when we are going to
00:03:20.400 create other services we can put them
00:03:22.860 inside of this container so all of our
00:03:24.840 resources are categorized in the
00:03:26.640 containers if we would like the next
00:03:28.620 step we're going to take is create an
00:03:30.959 Azure app service and Azure app Services
00:03:33.420 helps us with deploying web applications
00:03:36.180 on the Microsoft Azure portal so on the
00:03:39.060 toolbar I'm going to look for app
00:03:40.860 services and you can already see it
00:03:42.900 popping up right here
00:03:45.360 and as you can see I don't have any so
00:03:47.700 far so I'm going to click on Create and
00:03:50.459 then I have a few options in this case I
00:03:53.760 can pick what I want to create a web app
00:03:55.799 a static web app or a web app plus a
00:03:58.500 database well I will need a web app plus
00:04:01.560 a database so I'm going to select this
00:04:03.900 option right here and this is quite
00:04:06.120 convenient because it will create both
00:04:08.159 the server on which my code will
00:04:09.959 actually work but I've also created the
00:04:12.420 database and it will also already set
00:04:15.000 some connections and variables that you
00:04:16.858 need to set for those services to
00:04:18.358 communicate with John so it's very
00:04:19.798 convenient to pick that option
00:04:21.959 so again it's going to ask me for my
00:04:23.820 subscription and that is going to be the
00:04:25.620 only one that I have available
00:04:27.479 Resource Group I'm going to select the
00:04:30.180 resource code that I've just created
00:04:31.500 because I want those services to land
00:04:33.060 inside of this container and in the
00:04:35.940 region I'm again going to select the
00:04:37.860 region closest to me and that is going
00:04:40.380 to be Western Europe
00:04:42.180 then it's going to ask me for web app
00:04:44.400 details now the name is going to be
00:04:47.639 actually the URL where you can find our
00:04:49.740 app so I'm going to try some things
00:04:51.419 because of course it needs to be unique
00:04:53.460 so let's say that I want to do Azure
00:04:55.800 Django editorial
00:04:59.280 is still available so I'm going to pick
00:05:02.220 this one for my web application and it's
00:05:05.100 also going to request me the runtime
00:05:06.960 stack and I am going to select python
00:05:10.740 but I will also need to pick the version
00:05:12.780 and you want ideally to pick the version
00:05:15.300 that you're also using on your local
00:05:16.800 computer so I'm just going to go back to
00:05:20.100 my code for a second and I'm going to
00:05:23.460 type in the command in my terminal
00:05:25.440 python version
00:05:29.460 and you can see that I'm using version
00:05:32.419 3.8.10 so in here I'm also going to pick
00:05:36.660 python 3.8
00:05:39.780 now we're going to move on to the
00:05:41.460 database and you already see the message
00:05:43.080 here that database access will be locked
00:05:44.940 down and it's not exposed so Azure
00:05:47.039 already takes in some requirements for
00:05:49.380 compliance and security so that's really
00:05:51.479 nice so you don't have to take care of
00:05:53.039 that yourself
00:05:54.419 um you can immediately see that you can
00:05:55.680 use a number of backends for your
00:05:57.300 applications but since that we've picked
00:05:59.160 python it automatically goes to
00:06:01.139 postgresql as the best option and that
00:06:03.900 is also the option that we've specified
00:06:05.400 in our settings file so yeah all around
00:06:07.800 this is the best option for when you
00:06:09.720 deploy a Django application so I'm just
00:06:12.300 going to select the flexible server
00:06:16.199 and it's automatically going to generate
00:06:18.120 a server name and a database name I
00:06:20.759 would not change that it really doesn't
00:06:22.259 have that much uh yeah that much purpose
00:06:25.440 it's going to ask you if you want to
00:06:27.720 have Azure Azure cache for redis I'm
00:06:29.880 just going to leave that on now and for
00:06:31.979 the hosting plan I'm going to do basic
00:06:34.259 because right now it's just a hobby or a
00:06:36.900 research purpose it's it's not really a
00:06:38.880 production app stand is also going to be
00:06:40.860 quite a little bit more expensive than
00:06:42.720 this basic version
00:06:44.940 all right so this seems to be all good
00:06:48.960 so we're gonna go to review and create
00:06:52.860 and in this step uh yeah as you're going
00:06:55.740 to do some some validations it's going
00:06:57.300 to check all the things that I've filled
00:06:58.860 in and hopefully it will give us the
00:07:01.500 okay
00:07:02.759 so we are back and the validation has
00:07:06.020 successfully passed if we scroll down
00:07:09.060 you can already see some of the details
00:07:10.860 so for example the the engine the
00:07:13.139 regions the usernames of our database
00:07:15.000 the passwords of our database and just
00:07:16.979 some technical details I'm going to go
00:07:19.440 ahead and click on Create and now it is
00:07:22.020 going to deploy all of the different
00:07:23.460 services that we will need for this to
00:07:25.560 work it is not only going to deploy an
00:07:28.440 app service and a database it is also
00:07:30.780 going to create something called a
00:07:32.580 virtual Network which basically provides
00:07:36.000 yeah networking capabilities and also
00:07:38.460 make sure that our services can
00:07:39.720 communicate with each other and that
00:07:41.340 others can not
00:07:42.780 now the deployment of these Services can
00:07:44.699 take quite some time typically yeah
00:07:47.039 between three and ten minutes somewhere
00:07:49.440 depending on how fast it's going to go
00:07:50.940 so I will be back with you once my
00:07:52.860 deployment is complete
00:07:55.020 so it has taken a few minutes but now
00:07:57.060 our deployment is complete and if you
00:07:59.340 now go to your home page and then go to
00:08:01.860 our Resource Group we will see that
00:08:04.740 there are a number of services put
00:08:07.919 inside of this container
00:08:09.660 so on the top here you see an app
00:08:12.660 service plan and this is basically just
00:08:14.460 a container for our app service
00:08:17.160 app service is one important resource
00:08:20.039 this is where we will deploy the code of
00:08:22.139 our website so this is quite important
00:08:24.599 and this is one to remember
00:08:26.280 then next up we've got our Azure
00:08:29.400 database for postgresql flexible server
00:08:31.800 now this service here this is a database
00:08:34.260 so the database is going to communicate
00:08:36.000 with our app service to store
00:08:38.458 um all of our records from our app
00:08:40.559 internet database next you can see that
00:08:43.080 we have virtual networks and private DNS
00:08:45.899 zones so the virtual network is kind of
00:08:48.899 a yes takes care of the networking and
00:08:51.540 the private DNS zones make sure that
00:08:53.100 those networkable options happen in a
00:08:55.440 good and secure way those free services
00:08:58.380 basically facilitate the communication
00:09:00.480 between our app service and our Azure
00:09:03.180 database for postgresql so the main
00:09:06.000 things to take away from here is your
00:09:08.220 app service will be important for
00:09:11.040 for deploying your code this is where
00:09:13.080 you do all that stuff you have the
00:09:15.180 database here you don't really need to
00:09:17.580 do anything within particular any other
00:09:20.220 services around are just containers or
00:09:22.200 facilitators for our services
00:09:24.660 so if we go into our app service you
00:09:27.600 will notice on the overview page that we
00:09:29.880 see a few details here
00:09:32.760 so you can see all different kinds of
00:09:34.380 resource groups statuses locations but
00:09:37.140 also the domain for example
00:09:40.140 um so if we go here we click on the link
00:09:42.300 which is now our domain name and it's
00:09:45.600 gonna take some time to load all right
00:09:48.899 so our URL has now loaded you can see
00:09:50.820 that we have a web app that is waiting
00:09:53.760 uh for our content right now so that's
00:09:56.940 something we'll do in the next video
00:09:59.160 so over here on the left you've got this
00:10:01.019 menu overview just provides you with the
00:10:03.180 details and the most important parts are
00:10:06.000 going to be configuration and the
00:10:07.920 deployment center now inside of your
00:10:10.260 deployment Center and we will utilize
00:10:11.940 this
00:10:12.899 in our next video this is where we
00:10:15.300 connect our code to
00:10:18.180 um to our app
00:10:19.920 so the deployment Center is where we
00:10:22.019 connect our code to the actual app so
00:10:24.300 here we can State what the sources of
00:10:26.339 our code so this is the way that we
00:10:27.660 connect things and if we go to
00:10:29.279 configuration
00:10:30.899 you can see that this is where our
00:10:32.580 application settings live so one of the
00:10:35.459 few things you will immediately see is
00:10:37.680 that you see the Azure postgresql
00:10:39.540 connection string and this is also
00:10:41.100 something that we've put inside of our
00:10:42.480 settings.pi file so this is one you
00:10:44.459 might recognize from a few videos ago
00:10:47.160 so for now we're going to add one
00:10:49.140 additional setting to our application
00:10:51.779 and that setting is going to be our
00:10:54.360 secret key just to show you how it works
00:10:56.760 and also because this is quite important
00:10:58.380 to have inside of our app so what we can
00:11:01.740 do first of all let's go to a secret
00:11:04.860 generator
00:11:06.420 because we just want to have a random
00:11:08.880 key as a value which can serve as our
00:11:11.640 secret key
00:11:12.899 so
00:11:15.000 I'm going to click on new application
00:11:17.820 setting and we're going to call that
00:11:19.860 secret and then we can pass a value
00:11:22.260 thread but I'm just going to select one
00:11:23.880 of my keys that have been generated here
00:11:27.720 just paste it in here and I'm going to
00:11:30.839 say okay so now this setting has been
00:11:35.459 added and I need to click on top to save
00:11:38.040 so it actually stores that correctly and
00:11:41.700 you can see it's immediately updating
00:11:43.019 the web app settings and now we also
00:11:45.480 need to go to our code and connect the
00:11:47.579 secret to our code when we deploy it's
00:11:50.279 going to look at this secret variable
00:11:52.019 and use that as a secret key instead of
00:11:54.360 the hard-coded one that we have right
00:11:56.040 now inside of our code so you can see
00:11:58.260 that in our settings at by file we have
00:12:00.060 a secret key which is a hard-coded value
00:12:02.220 it actually specifies here stop as well
00:12:04.740 keep the secret key used in production
00:12:06.720 secrets and that's exactly what we will
00:12:08.880 do so I'm going to copy this value and
00:12:12.120 bring it over to deployments and here
00:12:14.880 just above the allowed host on top of my
00:12:17.160 code I'm going to paste it but we're
00:12:19.500 going to set the value to something else
00:12:21.839 like you want to set it to the
00:12:23.820 environment variable we've set in the
00:12:25.380 Azure portal and we can find it by
00:12:27.420 saying OS dot can be file
00:12:30.959 and we're going to open these brackets
00:12:34.260 and we're going to State the name of the
00:12:36.120 variable we've just created and the name
00:12:38.100 of that variable is secret and now when
00:12:41.820 our code is being deployed it will take
00:12:44.100 the value from Secret which has been set
00:12:46.320 in the Azure portal and that way even
00:12:48.779 when people take a look at our code they
00:12:50.339 will never be able to figure out what
00:12:51.899 our credentials are similar to what
00:12:53.760 we've done in our passwords
00:12:55.560 now of course this means that our code
00:12:57.779 is modified so we need to push this to
00:13:00.240 our GitHub repository again and we can
00:13:02.820 do that quite simply by adding git add
00:13:07.279 next we can State git commits Dash am
00:13:11.880 and we can say that this is
00:13:14.639 adding secret key
00:13:19.200 process okay one file change one
00:13:21.300 insertion and then we do get rich with
00:13:25.079 them brings it to our GitHub repository
00:13:30.660 and now the change in our code has been
00:13:33.480 made and this is ready for deployment
00:13:37.320 and I have navigated to my repository on
00:13:41.100 GitHub and you can see the change
00:13:42.600 already here so it states the message
00:13:44.700 that we've given it adding secret key
00:13:46.440 and if we go even deeper to our Azure
00:13:49.079 project and then to our production
00:13:51.000 that's our deployment.bi files it also
00:13:54.180 stays at Memphis and you can see it we
00:13:55.680 now refer to our secret instead of the
00:13:58.139 hard-coded secrets which will keep our
00:14:00.600 apps safe and that was all that we
00:14:02.880 needed to do for this video we have
00:14:05.220 created a resource Group on Azure which
00:14:07.800 serves as a container for our services
00:14:09.440 we also used Azure app service to create
00:14:12.600 a database and a server and I briefly
00:14:15.240 explain to you what each of these
00:14:16.740 resources means and what it does and we
00:14:19.019 also added an environment variable
00:14:20.579 inside of our Azure portal so that we
00:14:22.680 now know that our secret key is going to
00:14:25.380 be protected from there this means that
00:14:27.660 we have now completed the third video of
00:14:30.060 our tutorial series and that means that
00:14:32.160 there's only one left and in this next
00:14:34.320 video we're going to deploy our Django
00:14:36.060 code to Microsoft Azure and test where
00:14:38.940 everything works the way that we expect
00:14:40.560 thank you very much for watching this
00:14:42.660 video and I look forward to seeing you
00:14:44.220 in the next one
00:14:45.779 foreign

# tactiq.io free youtube transcript
# No title found
# https://www.youtube.com/watch/L5oCPVr7l4c

00:00:00.000 No text
00:00:00.480 hi everyone welcome to a new video on
00:00:03.240 the CBI channel in this tutorial series
00:00:06.279 we are deploying a d Jango application
00:00:08.440 on Microsoft Azure um I've already
00:00:12.040 created three videos previous to this
00:00:14.320 one in the first one we already changed
00:00:16.320 our Jango code for deployment in the
00:00:18.880 second one we pushed our code to GitHub
00:00:20.960 with Git in our previous video we
00:00:23.320 created all the Microsoft aure resources
00:00:25.359 we will need and in this video we are
00:00:27.720 going to deploy our Jango code to
00:00:29.560 Microsoft of azure in this final video
00:00:32.119 for the tutorial series I'm going to
00:00:33.800 focus on four things first we're going
00:00:36.360 to connect our code to the Azure portal
00:00:39.280 next we are going to check the status of
00:00:41.000 our deployment in GitHub actions and
00:00:43.120 this is really important because usually
00:00:44.879 your deployment will not go perfectly uh
00:00:48.239 in one go next we're are going to
00:00:51.160 migrate our database in the Azure portal
00:00:53.359 so that our database schema is also used
00:00:55.640 by a post SQL database and finally we're
00:00:58.280 going to check out our application and
00:01:00.039 see whether everything works the way we
00:01:02.000 No text
00:01:02.239 expect so let's get started with the
00:01:04.640 first step which is connecting our code
00:01:07.400 to the Azure portal so we've navigated
00:01:09.880 to portal. azure.com and we have signed
00:01:12.600 in and we're now going to go to our
00:01:14.560 Resource Group which we've created in a
00:01:16.560 previous video and what I already
00:01:19.080 explained last time is that within this
00:01:20.759 Resource Group we have a number of
00:01:22.720 services and um the place where we
00:01:25.439 connect our code to the Azure portal is
00:01:28.119 inside of our app service
00:01:30.560 so we are going to select our app
00:01:32.680 service right here and this will give me
00:01:35.960 all the details on our application and
00:01:38.720 on the left hand menu we're going to
00:01:41.360 look for deployment Center because this
00:01:44.159 is where we're going to configure our
00:01:47.680 deployment so we're going to give it
00:01:49.560 some time to load and um on this page
00:01:52.719 you can see on the settings that we can
00:01:55.399 deploy and build our code from our
00:01:57.479 preferred Source if we we look at this
00:02:00.920 field here there are a number of sources
00:02:03.200 we can select so there is something like
00:02:05.399 bit bucket local git aure repos you can
00:02:08.840 also do it manually with external git
00:02:11.319 but as you know we have pushed our code
00:02:13.599 to a GitHub repository so that is going
00:02:15.519 to be our preferred
00:02:18.080 Source the next thing Azure will ask you
00:02:21.280 and it won't ask it to me because I've
00:02:22.920 already done it before it is going to
00:02:24.680 ask you to sign in with your GitHub
00:02:26.879 account uh and by doing that you're able
00:02:29.080 to link your repository to the Azure
00:02:31.080 portal so if this has not been done for
00:02:33.280 you already please click on sign in and
00:02:35.800 sign in with your GitHub account next is
00:02:39.040 going to ask us some questions so first
00:02:41.640 off which organization to select well
00:02:44.519 for me it's just my private account and
00:02:46.159 I only have one organization so really
00:02:48.480 only one
00:02:50.040 option next is going to ask for the
00:02:52.400 repository and a repository is the one
00:02:55.120 that we've created on GitHub so in my
00:02:57.480 case this is Jango Deploy on aure but
00:03:00.000 maybe you have called your repository
00:03:01.519 something else it's also going to ask me
00:03:04.400 for the branch um in my project I only
00:03:07.000 have one so I'm going to select the main
00:03:09.680 branch and over here it again States the
00:03:12.519 versions and the runtime stack that we
00:03:14.239 have
00:03:15.200 selected um in order to deploy this
00:03:18.319 application Azure is going to generate
00:03:20.799 what's called a yo file which basically
00:03:23.000 has some commands for for deployment
00:03:25.000 some settings for deployment and you can
00:03:27.400 preview that file on the bottom right
00:03:29.519 here
00:03:30.319 so these are all the actions that um
00:03:32.840 yeah that they're going to carry out
00:03:34.480 when deploying our application you can
00:03:37.159 make some changes to this but for our
00:03:39.080 case it's really not necessary to do
00:03:40.799 that so we're just going to leave it as
00:03:42.840 is and once you've deployed this this
00:03:45.080 will also be visible inside of your
00:03:46.879 project so you can also change it from
00:03:48.599 there if you would
00:03:50.519 like so the last thing we need to do
00:03:53.280 here is click on Save which will set up
00:03:56.799 the deployment on GitHub action
00:04:00.720 and in a minute right here it's going to
00:04:02.239 say that successfully setting up
00:04:03.959 deployment um but we can actually see
00:04:07.239 that the deployment will happen on
00:04:09.159 GitHub actions by going to our GitHub
00:04:11.560 profile so I'm now on my GitHub profile
00:04:12.000 No text
00:04:14.439 and if I click on the repository that
00:04:17.000 we're trying to uh Deploy on the left
00:04:20.358 hand side we can view a few things for
00:04:23.080 our deployment first thing that we'll
00:04:25.199 notice that one minute ago a new folder
00:04:28.120 with workflows and the yo file has been
00:04:30.479 added to our repository so you will see
00:04:33.680 um in there that we have all of the
00:04:36.880 settings for
00:04:38.680 deployment which is nice and on the top
00:04:42.039 you can also see that we have a tab
00:04:43.560 called actions and this is where we will
00:04:45.280 be able to see the pipeline that is
00:04:46.960 being deployed here and you can see
00:04:49.240 already that I've tried this a few Fair
00:04:51.560 few times because deployments can be
00:04:53.360 quite tricky and quite hard um so I've
00:04:57.240 played around with a few settings before
00:04:58.840 I actually got it to work so the top one
00:05:02.080 is the one that is running now and if we
00:05:04.560 click on it you can see that the build
00:05:06.639 has already happened successfully and
00:05:08.800 that the deployment is still in progress
00:05:12.160 um for both these steps you will be able
00:05:14.199 to see the substeps and you will see
00:05:16.000 everything that's happening by clicking
00:05:17.600 on it so for example here in the build
00:05:19.919 you can see that at some point it set up
00:05:21.639 the python version um 3.8.7 it has also
00:05:25.280 created a virtual environment it has
00:05:27.479 installed all of the dependencies from
00:05:29.600 our requirements of dxt file so that's
00:05:32.759 all quite nice um and in addition if
00:05:35.759 something goes wrong this is also a
00:05:37.360 great place to troubleshoot and see if
00:05:39.400 there are some things wrong in your app
00:05:41.479 settings or or yeah there's something
00:05:43.600 missing for this
00:05:44.919 deployment same goes for the deploy um
00:05:47.919 here we will also be able to see what is
00:05:50.000 going on and for example here you can
00:05:52.639 see a bunch of stuff that is happening
00:05:55.160 on the Azure side uh and also here you
00:05:57.520 will be able to see some things that are
00:05:58.720 going wrong or going right based on
00:06:01.199 based on the deployment so I'm going to
00:06:03.080 give it some time to deploy and then
00:06:04.639 I'll come back to you once it has
00:06:06.800 successfully run okay we are back and
00:06:09.720 our deployment now looks complete so
00:06:13.080 let's check it out in the Azure
00:06:15.440 portal so we are back on the overview
00:06:18.000 page and over here you can see that this
00:06:19.680 is our domain name so let's check out
00:06:22.440 what happens when I click it after my
00:06:27.280 deployment so um I'm for give it some
00:06:29.800 time to load and it returns a server
00:06:31.840 error 500 which means that something in
00:06:34.680 here is going wrong it is now up to us
00:06:37.919 to figure out what is going on all right
00:06:41.800 we are back and I think that I know why
00:06:44.960 um we are getting a server error and for
00:06:47.599 that we're going to go back to our code
00:06:49.639 and make a change to the yl preview file
00:06:53.240 that we've just seen so go to your code
00:06:56.720 editor and in the terminal the first
00:06:58.680 thing that you want to do do is do the
00:07:00.840 command git
00:07:02.639 pool because by doing that you get the
00:07:05.120 latest version of the yo file um that
00:07:09.599 you that has been put there by Azure and
00:07:13.599 you can see that there are a number of
00:07:15.120 steps in here and at some point yes here
00:07:19.160 it is going to install dependencies it's
00:07:21.840 going to say pip install requirements
00:07:23.599 and we're going to add a step to this
00:07:26.800 file because the thing we appear to be
00:07:29.400 missing is something called collect
00:07:35.919 static uh collect static is something
00:07:38.440 that handles your static files and put
00:07:40.240 them in a certain location but for that
00:07:42.479 to work you need to enter the code
00:07:45.639 python manage.py
00:07:48.199 collect static and that will collect all
00:07:51.879 of your static files and put them in a
00:07:53.400 location so that ezure knows how to use
00:07:55.479 them uh so this is basically going to be
00:07:57.599 a new step inside of our deployment M so
00:08:00.120 I'm going to save this file which then
00:08:02.759 means that it modified so we need to
00:08:04.520 also add it to our repository so I'm
00:08:07.039 going to say G
00:08:08.840 add git commit D
00:08:12.319 am
00:08:13.960 added collect static
00:08:17.000 to collect static to Yo
00:08:21.400 file and I'm going to push that to our
00:08:24.240 GitHub repository and now GitHub should
00:08:27.720 automatically um deploy our application
00:08:30.759 to Azure again and hopefully this will
00:08:32.880 work so I am going to go to my uh GitHub
00:08:38.039 repository and I'm going to click on
00:08:40.159 actions again and you will see that it's
00:08:42.679 now going to add the collect static to
00:08:44.880 the emo file and if I click on
00:08:49.480 build you will also see that here we
00:08:52.519 have this new Step run collect static
00:08:54.440 which is similar to what we've St here
00:08:56.320 run collect static so you can extend
00:08:57.880 this file with more uh
00:09:02.720 commands so you can see that it has
00:09:05.560 installed the dependes and it has
00:09:06.720 successfully run collect static and it
00:09:08.760 has placed 129 static files to our
00:09:12.279 static files folder so hopefully this
00:09:14.839 will uh work and enable us to move on
00:09:18.360 with our deployment I will come back to
00:09:20.880 you once this deployment is
00:09:22.959 complete all right you can see that our
00:09:25.120 deployment is now
00:09:27.160 complete um and before we're going to
00:09:29.720 check that out we're actually going to
00:09:31.200 move over to the next important part and
00:09:34.000 No text
00:09:34.839 that is going to be migrating our
00:09:37.200 database so the schema from our local
00:09:40.160 database is actually used by the post
00:09:42.959 SQL database so we're back in our Azure
00:09:45.920 app Services now which is the same place
00:09:47.880 where you connected your code and on the
00:09:50.279 left menu I'm going to scroll down until
00:09:53.240 I see ssh in the development tools and
00:09:57.079 when I click there I click on go and
00:10:01.240 this will open some kind of a console
00:10:03.160 where we can um yeah where we can put in
00:10:05.839 some commands including the command to
00:10:07.959 migrate our database so let's give it
00:10:10.880 some time to spin
00:10:12.480 up and when we put in these commands we
00:10:15.279 actually don't need to do the classic
00:10:17.600 python manager by uh make migrations
00:10:21.000 because those have already been
00:10:22.519 processed in those migration files which
00:10:24.959 are on our GitHub but we do need to add
00:10:27.839 uh python manage. by migrate to actually
00:10:30.680 migrate what is in those files to our
00:10:33.360 database so that's exactly what we're
00:10:35.519 going to do now this thing has loaded we
00:10:38.040 specify python manage. by
00:10:46.000 migrate and you can see that it's going
00:10:48.720 to take all of the models that we have
00:10:51.920 and uh yeah it's going to put those
00:10:54.560 inside of our database as a schema so
00:10:56.279 also the Azure content which is the only
00:10:58.519 real
00:10:59.720 Uh custom database that I have created
00:11:02.959 okay so we have now included the collect
00:11:05.440 static um command into our code it has
00:11:09.639 been republished to the Azure portal and
00:11:13.320 we have successfully migrated our
00:11:15.240 database so now it is time to see
00:11:17.560 whether it actually works so I'm on my
00:11:20.440 Azure app Services once again and I'm on
00:11:22.600 the overview page and right here you can
00:11:25.240 see the domain link and I'm just going
00:11:27.519 to click it
00:11:29.959 and this time we see the app in the same
00:11:32.399 layout as we saw it on my local computer
00:11:34.880 at the beginning of this tutorial Series
00:11:37.160 so um on this web address I can see my
00:11:39.519 homepage I can go to my about page
00:11:43.639 successfully um and now let's see
00:11:46.000 whether I can add entries which can then
00:11:48.240 confirm to me that my uh database is
00:11:51.320 working correctly so I can say my
00:11:54.800 project just say something like
00:11:57.560 description click on on confirm and we
00:11:59.959 now see that a new record has been added
00:12:01.920 to my app that is great if I now add
00:12:06.079 another
00:12:07.839 one it will also work and if I click on
00:12:12.320 delete for the second one I am sure that
00:12:14.959 I want to delete that it also works the
00:12:17.760 way that we
00:12:19.320 expect so as you just saw the app is
00:12:22.199 working and behaving the way we expect
00:12:25.240 um I don't personally have a login
00:12:27.320 module inside of my application but I
00:12:29.240 can imagine that most of you guys do
00:12:31.160 have that and to not lock yourself out
00:12:33.600 of this app um you need to create a user
00:12:36.240 for
00:12:37.079 yourself um so I'm going to show you
00:12:39.360 quickly how you can do that from the
00:12:40.560 command line as well similar as before
00:12:42.800 we're going to go to our Azure app
00:12:44.120 servers and we're going to go down until
00:12:45.920 you see SSH because this basically
00:12:48.519 functions as the terminal that you have
00:12:50.560 on your local computer but then on on
00:12:53.199 aszure uh we can click on go it's going
00:12:57.760 to spin up this host for us and here I
00:13:01.560 can State python manage.py uh create
00:13:06.440 super user you can also do create user
00:13:10.279 and it's going to ask me the same things
00:13:11.839 that it would ask um on my local
00:13:14.519 computer so I can uh create a
00:13:18.839 username I can uh do an email address
00:13:21.839 let's just say that it's email
00:13:24.519 email.com I can do a password and I need
00:13:29.680 to confirm that
00:13:32.360 password now it's been created
00:13:34.720 successfully um now I don't have a login
00:13:37.120 module but I can of course test whether
00:13:39.079 this is working by going to the admin
00:13:41.480 portal of Jango and there I can log in
00:13:44.920 using my name and the password I just
00:13:49.279 created and you will hopefully see that
00:13:52.519 I am now logged in to my uh admin so
00:13:56.839 this is the way that you can create a
00:13:58.120 user let's say say that you have a login
00:13:59.639 portal this is the way to not lck
00:14:01.279 yourself out and actually get access to
00:14:03.399 your application so we have now
00:14:05.600 successfully deployed our uh application
00:14:09.320 um on Microsoft Azure um what you also
00:14:12.880 saw during this video is that I tried
00:14:14.759 this a fair few times um that's because
00:14:18.440 deployments can typically be quite hard
00:14:21.320 um due to various reasons um my advice
00:14:25.800 to you would be that if you ever
00:14:28.000 struggle to deploy or or things are not
00:14:30.560 working the way you expect it to work
00:14:33.560 the first thing go to your GitHub
00:14:35.480 actions and check whether your build and
00:14:37.199 deploy is going the way it is if it's
00:14:40.079 not going successfully you will able to
00:14:41.800 see that here and you can also uh when
00:14:44.920 it still doesn't work but these things
00:14:46.880 are uh on green and yeah doing all of
00:14:50.240 the stuff you expect you could also go
00:14:52.240 to the Azure portal and on the left go
00:14:55.920 to either diagnose and solve problems
00:14:59.399 um there it will uh yeah probably have
00:15:02.880 some diagnosis and and some potential
00:15:05.240 Solutions what you can also do is go on
00:15:08.279 the menu all the way
00:15:10.560 down and check out the log stream
00:15:15.279 because the log stream here will provide
00:15:18.240 um yeah like a real- Time log of what is
00:15:20.480 happening inside of your
00:15:22.040 application um and that can also point
00:15:25.000 you towards some of the things that
00:15:26.360 might not go the way it expect it will
00:15:28.800 light here with a message saying error
00:15:31.319 uh and that yeah that can potentially
00:15:33.199 help you to solve these kind of
00:15:34.839 problems so I want to thank you guys
00:15:37.319 very much for following this tutorial
00:15:39.240 series with me if you have any questions
00:15:41.240 on this deployment or things are not
00:15:42.880 working the way you expect uh let me
00:15:44.839 know in the comments um and yeah I hope
00:15:47.800 to see you in a new video on the channel
00:15:50.399 soon
00:15:51.920 goodbye
s://www.youtube.com/watch?v=L5oCPVr7l4